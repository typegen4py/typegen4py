from types import TracebackType
from typing import Any, Generator, Optional, Type

class catch_unraisable_exception:
    unraisable: Any = ...
    def __init__(self) -> None: ...
    def __enter__(self) -> catch_unraisable_exception: ...
    def __exit__(self, exc_type: Optional[Type[BaseException]], exc_val: Optional[BaseException], exc_tb: Optional[TracebackType]) -> None: ...

def unraisable_exception_runtest_hook() -> Generator[None, None, None]: ...
def pytest_runtest_setup() -> Generator[None, None, None]: ...
def pytest_runtest_call() -> Generator[None, None, None]: ...
def pytest_runtest_teardown() -> Generator[None, None, None]: ...
