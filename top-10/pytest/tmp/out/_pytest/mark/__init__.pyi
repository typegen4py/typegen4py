from .structures import MARK_GEN as MARK_GEN, Mark as Mark, MarkDecorator as MarkDecorator, MarkGenerator as MarkGenerator, ParameterSet as ParameterSet, get_empty_parameterset_mark as get_empty_parameterset_mark
from _pytest.nodes import Item
from typing import Any

class KeywordMatcher:
    @classmethod
    def from_item(cls: Any, item: Item) -> KeywordMatcher: ...
    def __call__(self, subname: str) -> bool: ...
    def __init__(self, names: Any) -> None: ...
    def __lt__(self, other: Any) -> Any: ...
    def __le__(self, other: Any) -> Any: ...
    def __gt__(self, other: Any) -> Any: ...
    def __ge__(self, other: Any) -> Any: ...

class MarkMatcher:
    own_mark_names: Any = ...
    @classmethod
    def from_item(cls: Any, item: Any) -> MarkMatcher: ...
    def __call__(self, name: str) -> bool: ...
    def __init__(self, own_mark_names: Any) -> None: ...
    def __lt__(self, other: Any) -> Any: ...
    def __le__(self, other: Any) -> Any: ...
    def __gt__(self, other: Any) -> Any: ...
    def __ge__(self, other: Any) -> Any: ...
