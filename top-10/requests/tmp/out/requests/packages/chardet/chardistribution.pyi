from .big5freq import BIG5_TABLE_SIZE as BIG5_TABLE_SIZE, BIG5_TYPICAL_DISTRIBUTION_RATIO as BIG5_TYPICAL_DISTRIBUTION_RATIO, Big5CharToFreqOrder as Big5CharToFreqOrder
from .compat import wrap_ord as wrap_ord
from .euckrfreq import EUCKRCharToFreqOrder as EUCKRCharToFreqOrder, EUCKR_TABLE_SIZE as EUCKR_TABLE_SIZE, EUCKR_TYPICAL_DISTRIBUTION_RATIO as EUCKR_TYPICAL_DISTRIBUTION_RATIO
from .euctwfreq import EUCTWCharToFreqOrder as EUCTWCharToFreqOrder, EUCTW_TABLE_SIZE as EUCTW_TABLE_SIZE, EUCTW_TYPICAL_DISTRIBUTION_RATIO as EUCTW_TYPICAL_DISTRIBUTION_RATIO
from .gb2312freq import GB2312CharToFreqOrder as GB2312CharToFreqOrder, GB2312_TABLE_SIZE as GB2312_TABLE_SIZE, GB2312_TYPICAL_DISTRIBUTION_RATIO as GB2312_TYPICAL_DISTRIBUTION_RATIO
from .jisfreq import JISCharToFreqOrder as JISCharToFreqOrder, JIS_TABLE_SIZE as JIS_TABLE_SIZE, JIS_TYPICAL_DISTRIBUTION_RATIO as JIS_TYPICAL_DISTRIBUTION_RATIO
from typing import Any

ENOUGH_DATA_THRESHOLD: int
SURE_YES: float
SURE_NO: float
MINIMUM_DATA_THRESHOLD: int

class CharDistributionAnalysis:
    def __init__(self) -> None: ...
    def reset(self) -> None: ...
    def feed(self, aBuf: Any, aCharLen: Any) -> None: ...
    def get_confidence(self): ...
    def got_enough_data(self): ...
    def get_order(self, aBuf: Any): ...

class EUCTWDistributionAnalysis(CharDistributionAnalysis):
    def __init__(self) -> None: ...
    def get_order(self, aBuf: Any): ...

class EUCKRDistributionAnalysis(CharDistributionAnalysis):
    def __init__(self) -> None: ...
    def get_order(self, aBuf: Any): ...

class GB2312DistributionAnalysis(CharDistributionAnalysis):
    def __init__(self) -> None: ...
    def get_order(self, aBuf: Any): ...

class Big5DistributionAnalysis(CharDistributionAnalysis):
    def __init__(self) -> None: ...
    def get_order(self, aBuf: Any): ...

class SJISDistributionAnalysis(CharDistributionAnalysis):
    def __init__(self) -> None: ...
    def get_order(self, aBuf: Any): ...

class EUCJPDistributionAnalysis(CharDistributionAnalysis):
    def __init__(self) -> None: ...
    def get_order(self, aBuf: Any): ...
