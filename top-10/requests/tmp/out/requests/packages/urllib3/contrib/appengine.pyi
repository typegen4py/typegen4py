from ..exceptions import HTTPError as HTTPError, HTTPWarning as HTTPWarning, MaxRetryError as MaxRetryError, ProtocolError as ProtocolError, SSLError as SSLError, TimeoutError as TimeoutError
from ..request import RequestMethods as RequestMethods
from ..response import HTTPResponse as HTTPResponse
from ..util.retry import Retry as Retry
from ..util.timeout import Timeout as Timeout
from typing import Any, Optional

log: Any

class AppEnginePlatformWarning(HTTPWarning): ...
class AppEnginePlatformError(HTTPError): ...

class AppEngineManager(RequestMethods):
    validate_certificate: Any = ...
    retries: Any = ...
    def __init__(self, headers: Optional[Any] = ..., retries: Optional[Any] = ..., validate_certificate: bool = ...) -> None: ...
    def __enter__(self): ...
    def __exit__(self, exc_type: Any, exc_val: Any, exc_tb: Any): ...
    def urlopen(self, method: Any, url: Any, body: Optional[Any] = ..., headers: Optional[Any] = ..., retries: Optional[Any] = ..., redirect: bool = ..., timeout: Any = ..., **response_kw: Any): ...

def is_appengine(): ...
def is_appengine_sandbox(): ...
def is_local_appengine(): ...
def is_prod_appengine(): ...
def is_prod_appengine_mvms(): ...
