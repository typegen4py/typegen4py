import collections
from .compat import OrderedDict as OrderedDict
from typing import Any, Optional

class CaseInsensitiveDict(collections.MutableMapping):
    def __init__(self, data: Optional[Any] = ..., **kwargs: Any) -> None: ...
    def __setitem__(self, key: Any, value: Any) -> None: ...
    def __getitem__(self, key: Any): ...
    def __delitem__(self, key: Any) -> None: ...
    def __iter__(self) -> Any: ...
    def __len__(self): ...
    def lower_items(self): ...
    def __eq__(self, other: Any) -> Any: ...
    def copy(self): ...

class LookupDict(dict):
    name: Any = ...
    def __init__(self, name: Optional[Any] = ...) -> None: ...
    def __getitem__(self, key: Any): ...
    def get(self, key: Any, default: Optional[Any] = ...): ...
