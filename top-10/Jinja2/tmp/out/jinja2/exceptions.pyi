from ._compat import PY2 as PY2, imap as imap, implements_to_string as implements_to_string, text_type as text_type
from typing import Any, Optional

class TemplateError(Exception):
    def __init__(self, message: Optional[Any] = ...) -> None: ...
    @property
    def message(self): ...

class TemplateNotFound(IOError, LookupError, TemplateError):
    message: Any = ...
    name: Any = ...
    templates: Any = ...
    def __init__(self, name: Any, message: Optional[Any] = ...) -> None: ...

class TemplatesNotFound(TemplateNotFound):
    templates: Any = ...
    def __init__(self, names: Any = ..., message: Optional[Any] = ...) -> None: ...

class TemplateSyntaxError(TemplateError):
    lineno: Any = ...
    name: Any = ...
    filename: Any = ...
    source: Any = ...
    translated: bool = ...
    def __init__(self, message: Any, lineno: Any, name: Optional[Any] = ..., filename: Optional[Any] = ...) -> None: ...
    def __reduce__(self): ...

class TemplateAssertionError(TemplateSyntaxError): ...
class TemplateRuntimeError(TemplateError): ...
class UndefinedError(TemplateRuntimeError): ...
class SecurityError(TemplateRuntimeError): ...
class FilterArgumentError(TemplateRuntimeError): ...
